\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\bibstyle{plain}
\citation{Kane-Heinrich92}
\@writefile{toc}{\contentsline {section}{\numberline {1}Overview}{1}{section.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}Inputs and Outputs}{1}{subsection.1.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.1}Assembler}{1}{subsubsection.1.1.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.2}Disassembler}{1}{subsubsection.1.1.2}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}Error Outputs}{2}{subsection.1.2}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3}Exit Code}{2}{subsection.1.3}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {2}Assembly Language Syntax}{2}{section.2}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Lexical Grammar}{2}{subsection.2.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Context-Free Grammar}{2}{subsection.2.2}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {3}Initial Values}{2}{section.3}\protected@file@percent }
\newlabel{sec:initialvalues}{{3}{2}{Initial Values}{section.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Constraints on Assembly Code}{2}{section.4}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces  Lexical grammar of the SRM assembler. This grammar uses a \texttt  {terminal font} for terminal symbols. Note that an underbar (\texttt  {\_}) and all ASCII letters (a-z and A-Z) are included in the production for \mbox  {$\langle $\textrm  {letter}$\rangle $}. Curly brackets, such as $\{x\}$, mean an arbitrary number of (i.e., 0 or more) repetitions of $x$. Note that curly braces are not terminal symbols in this grammar. Some character classes are described in English, these are described in a Roman font between double quotation marks (`` and ''). Note that all characters matched by the nonterminal \mbox  {$\langle $\textrm  {ignored}$\rangle $} are ignored by the lexer. However, the characters that are part of an \mbox  {$\langle $\textrm  {eol}$\rangle $} token (i.e., carriage returns and newlines) are not ignored immediately following a semicolon, \mbox  {$\langle $\textrm  {reserved-opcode}$\rangle $} or \mbox  {$\langle $\textrm  {reserved-data-size}$\rangle $}, although they are ignored in all other contexts. }}{3}{figure.1}\protected@file@percent }
\newlabel{fig:lexical-grammar}{{1}{3}{Lexical grammar of the SRM assembler. This grammar uses a \texttt {terminal font} for terminal symbols. Note that an underbar (\texttt {\_}) and all ASCII letters (a-z and A-Z) are included in the production for \nonterm {letter}. Curly brackets, such as $\arbno {x}$, mean an arbitrary number of (i.e., 0 or more) repetitions of $x$. Note that curly braces are not terminal symbols in this grammar. Some character classes are described in English, these are described in a Roman font between double quotation marks (`` and ''). Note that all characters matched by the nonterminal \nonterm {ignored} are ignored by the lexer. However, the characters that are part of an \nonterm {eol} token (i.e., carriage returns and newlines) are not ignored immediately following a semicolon, \nonterm {reserved-opcode} or \nonterm {reserved-data-size}, although they are ignored in all other contexts}{figure.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces  The (context free) grammar of the SRM assembler, which uses a \texttt  {typewriter font} for terminal symbols. }}{4}{figure.2}\protected@file@percent }
\newlabel{fig:cfg}{{2}{4}{The (context free) grammar of the SRM assembler, which uses a \texttt {typewriter font} for terminal symbols}{figure.2}{}}
\bibdata{srm-vm.bib}
\bibcite{Kane-Heinrich92}{1}
\gdef \@abspage@last{5}
